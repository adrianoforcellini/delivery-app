{"version":3,"sources":["utills/io.js","pages/Login/Login.js","pages/Routes.js","App.js","index.js"],"names":["io","Login","useState","email","setUser","password","setPassword","isDisabled","trueOrFalse","invalidLogin","setInvalidLogin","prefix","history","useHistory","verifyDisabled","length","test","className","name","value","onChange","target","placeholder","type","onClick","socket","emit","on","data","console","log","push","disabled","Routes","path","component","from","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAEeA,eAAG,yB,OC4FHC,MAxFf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAGMC,EAAS,iBAETC,EAAUC,cAEVC,EAAiB,WAEjBT,EAASU,QALC,GAIH,0BAC0BC,KAAKb,GACxCK,GAAY,GAEZA,GAAY,IA6BhB,OACE,sBAAKS,UAAU,aAAf,UACE,uBACEA,UAAU,cACVC,KAAK,QACLC,MAAQhB,EACR,wBAAiBQ,EAAjB,eACAS,SAhCa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBjB,EAAQiB,EAAOF,OACfL,KA+BIQ,YAAY,eAEd,uBACEL,UAAU,iBACVC,KAAK,WACL,wBAAiBP,EAAjB,kBACAQ,MAAQd,EACRe,SAnCiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxBf,EAAYe,EAAOF,OACnBL,KAkCIQ,YAAY,aAEd,sBAAKL,UAAU,UAAf,UACE,wBACEM,KAAK,SACLN,UAAU,gBACVO,QAjCM,WACZC,EAAOC,KAAK,QAAS,CAAEvB,QAAOE,aAC9BoB,EAAOE,GAAG,SAAS,SAACC,GAElB,GADAC,QAAQC,IAAIF,IACPA,EAEH,OADAlB,GAAgB,GACT,KATXmB,QAAQC,IAAI,MACZlB,EAAQmB,KAAK,iBAoCP,wBAAiBpB,EAAjB,gBACAqB,SAAWzB,EALb,mBASA,wBACEgB,KAAK,SACLN,UAAU,gBACV,wBAAiBN,EAAjB,mBAHF,sCAOCF,EACG,qBAAK,wBAAiBE,EAAjB,yBAAL,6BACA,+BCnEGsB,MAZf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAYlC,IACjC,cAAC,IAAD,CAAOiC,KAAK,YAAYC,UAAYlC,IACpC,cAAC,IAAD,CAAUmC,KAAK,IAAIC,GAAG,iBCVfC,EAFH,kBAAM,cAAC,EAAD,KCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f1af88f.chunk.js","sourcesContent":["import { io } from 'socket.io-client';\n\nexport default io('http://localhost:3001');\n","import React, { useState } from 'react';\nimport './Login.css';\nimport { useHistory } from 'react-router-dom';\n\nimport socket from '../../utills/io';\n// invalidLogin: `[data-testid='${prefix}element-invalid-email']`\nfunction Login() {\n  const [email, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isDisabled, trueOrFalse] = useState(true);\n  const [invalidLogin, setInvalidLogin] = useState(false);\n  // const [validLogin, setValidLogin] = useState(false);\n\n  const prefix = 'common_login__';\n  const passMin = 5;\n  const history = useHistory();\n\n  const verifyDisabled = () => {\n    const re = /(.+)@(.+){2,}\\.(.+){2,}/;\n    if (password.length >= passMin && re.test(email)) {\n      trueOrFalse(false);\n    } else {\n      trueOrFalse(true);\n    }\n  };\n\n  const userChange = ({ target }) => {\n    setUser(target.value);\n    verifyDisabled();\n  };\n\n  const passwordChange = ({ target }) => {\n    setPassword(target.value);\n    verifyDisabled();\n  };\n\n  const redirectCostummer = () => {\n    console.log('oi');\n    history.push('/costumer');\n  };\n  const login = () => {\n    socket.emit('login', { email, password });\n    socket.on('login', (data) => {\n      console.log(data);\n      if (!data) {\n        setInvalidLogin(true);\n        return null;\n      }redirectCostummer();\n    });\n  };\n\n  return (\n    <div className=\"login-Page\">\n      <input\n        className=\"email-input\"\n        name=\"email\"\n        value={ email }\n        data-testid={ `${prefix}input-email` }\n        onChange={ userChange }\n        placeholder=\"User Email\"\n      />\n      <input\n        className=\"password-input\"\n        name=\"password\"\n        data-testid={ `${prefix}input-password` }\n        value={ password }\n        onChange={ passwordChange }\n        placeholder=\"Password\"\n      />\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"signin-button\"\n          onClick={ login }\n          data-testid={ `${prefix}button-login` }\n          disabled={ isDisabled }\n        >\n          LOGIN\n        </button>\n        <button\n          type=\"button\"\n          className=\"signup-button\"\n          data-testid={ `${prefix}button-register` }\n        >\n          Ainda n√£o tenho conta\n        </button>\n        {invalidLogin\n          ? <div data-testid={ `${prefix}element-invalid-email` }>LOGIN INVALIDO </div>\n          : <div />}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Login from './Login/Login';\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={ Login } />\n        <Route path=\"/costumer\" component={ Login } />\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './pages/Routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}